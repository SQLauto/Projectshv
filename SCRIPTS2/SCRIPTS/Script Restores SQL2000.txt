/* ---enable cmdshell

exec sp_configure 'xp_cmdshell' , 1

RECONFIGURE
*/
SET NOCOUNT ON

Declare @BackupFile varchar(500)
Declare @BackupPath varchar(500)
Declare @BackupFileExtension varchar(10)
Declare @DataPath varchar(500)
Declare @LogPath varchar(500)
Declare @DatabaseName varchar(500)

Declare @DOSCmd varchar(500)
Declare @RestoreCmd varchar(500)
Declare @RestoreString nvarchar(8000)

/****** SET PARAMETERS *******/

Set @BackupPath = 'C:\'
Set @BackupFileExtension = 'bak'
Set @DataPath = 'C:\MSSQL\Data\'
Set @LogPath = 'C:\MSSQL\Log\'


IF (object_id('tempdb..#CheckFile') is not null)
   drop table #CheckFile

IF (object_id('tempdb..#BackupHeader') is not null)
   drop table #BackupHeader

IF (object_id('tempdb..#Files') is not null)
   drop table #Files

   
Create table #CheckFile (Data varchar(500))

Create table #Files (
LogicalName nvarchar(128),
PhysicalName nvarchar(260),
Type char(1),
FileGroupName nvarchar(128),
Size numeric(20,0),
MaxSize numeric(20,0) 
)



Create Table #BackupHeader (
BackupName	nvarchar(128),
BackupDescription	nvarchar(255),
BackupType	smallint,
ExpirationDate	datetime,
Compressed	tinyint,
Position	smallint,
DeviceType	tinyint,
UserName	nvarchar(128),
ServerName	nvarchar(128),
DatabaseName	nvarchar(128),
DatabaseVersion	int,
DatabaseCreationDate	datetime,
BackupSize	numeric(20,0),
FirstLSN	numeric(25,0),
LastLSN	numeric(25,0),
CheckpointLSN	numeric(25,0),
DatabaseBackupLSN	numeric(25,0),
BackupStartDate	datetime,
BackupFinishDate	datetime,
SortOrder	smallint,
CodePage	smallint,
UnicodeLocaleId	int,
UnicodeComparisonStyle	int,
CompatibilityLevel	tinyint,
SoftwareVendorId	int,
SoftwareVersionMajor	int,
SoftwareVersionMinor	int,
SoftwareVersionBuild	int,
MachineName	nvarchar(128),
Flags	int,
BindingID	uniqueidentifier,
RecoveryForkID	uniqueidentifier,
Collation	nvarchar(128))


Set @DOSCmd = 'Dir ' + @BackupPath + '*.'  + @BackupFileExtension + ' /B'

insert into #checkfile
exec master..xp_cmdshell @DOSCmd

Delete #CheckFile where Data is null

Update #CheckFile Set Data = @BackupPath + Data

---Select * from #CheckFile order by Data

DECLARE DB_Cursor CURSOR FOR
Select * from #CheckFile order by Data

OPEN DB_Cursor
FETCH NEXT FROM DB_Cursor
INTO @BackupFile
WHILE @@FETCH_STATUS = 0

BEGIN

	Set @RestoreCmd = 'restore headeronly from disk = ''' + @BackupFile +  ''''

	insert into #BackupHeader
	EXEC(@RestoreCmd)

	Select @DatabaseName = DatabaseName from #BackupHeader

	Set @RestoreCmd = 'restore filelistonly from disk = ''' + @BackupFile +  ''''
	
	INSERT #Files
	EXEC(@RestoreCmd)

	Set @RestoreString = 'RESTORE DATABASE [' + @DatabaseName + ']' + CHAR(13) + 'FROM  DISK = N''' + @BackupFile + ''''+ CHAR(13) 


	Select @RestoreString = @RestoreString  + 
		'MOVE  N''' + LogicalName  + ''' TO N''' + 
			(Case [Type] 
			When 'L' Then  @LogPath + @DatabaseName + '_Log.ldf'',' + Char(13)
			Else @DataPath + @DatabaseName + '_Data.mdf'',' End) + Char(13)
	FROM #Files

	Set @RestoreString =  SUBSTRING( @RestoreString, 1,Len(@RestoreString)-3)   + CHAR(13) + 'GO'

	Print @RestoreString
	
--	Select * from #BackupHeader
--	Select * from #Files
	
	TRUNCATE TABLE #BackupHeader
	
	TRUNCATE TABLE #Files
	
	FETCH NEXT FROM DB_Cursor
	INTO @BackupFile
END

CLOSE DB_Cursor
DEALLOCATE DB_Cursor



